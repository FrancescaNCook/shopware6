(this.webpackJsonp=this.webpackJsonp||[]).push([["mltisafe-multi-safepay"],{ADUy:function(e,t,n){"use strict";n.r(t);n("I0jd");var a=n("poD7"),i=n.n(a);const{Component:o,Mixin:s}=Shopware,{Criteria:r}=Shopware.Data;o.register("multisafepay-refund",{template:i.a,inject:["repositoryFactory","orderService","stateStyleDataProviderService","multiSafepayApiService"],mixins:[s.getByName("notification")],props:{orderId:{type:String,required:!0}},data:()=>({amount:null,isLoading:null,versionContext:null,order:null,maxRefundableAmount:0,isRefundAllowed:!0,refundedAmount:0,showModal:!1,isRefundDisabled:!1}),watch:{orderId(){this.createdComponent()},amount(){this.amount=parseFloat(this.amount).toFixed(2)},refundedAmount(){this.refundedAmount=parseFloat(this.refundedAmount).toFixed(2)}},methods:{closeModal(){this.showModal=!1},showRefundModal(){this.amount<.01?this.createNotificationWarning({title:"Invalid amount",message:"Fill in a valid amount"}):this.showModal=!0},applyRefund(){this.closeModal(),this.multiSafepayApiService.refund(this.amount,this.orderId).then(e=>{!1!==e.status?(this.createNotificationSuccess({title:"Success",message:"Successfully refunded"}),this.reloadEntityData()):this.createNotificationError({title:"Failed to refund",message:e.message})})},createdComponent(){this.versionContext=Shopware.Context.api,this.reloadEntityData()},reloadEntityData(){return this.isLoading=!0,this.orderRepository.get(this.orderId,this.versionContext,this.orderCriteria).then(e=>(this.order=e,this.multiSafepayApiService.getRefundData(this.order.id).then(e=>{this.isRefundAllowed=e.isAllowed,this.refundedAmount=e.refundedAmount,this.maxRefundableAmount=this.order.amountTotal-this.refundedAmount,this.isRefundDisabled=this.order.amountTotal-this.refundedAmount==0,this.isLoading=!1}).catch(()=>{this.isRefundAllowed=!1}),Promise.resolve())).catch(()=>Promise.reject())}},computed:{orderRepository(){return this.repositoryFactory.create("order")},orderCriteria(){const e=new r(this.page,this.limit);return e.addAssociation("currency"),e}},created(){this.createdComponent()}});var l=n("aZvQ"),p=n.n(l);const{Component:u,Mixin:c}=Shopware;u.register("multisafepay-verify-api-key",{template:p.a,inject:["multiSafepayApiService"],mixins:[c.getByName("notification")],data:()=>({isLoading:!1}),computed:{globalPluginConfig(){let e=this.$parent.$parent.$parent.actualConfigData;return e?e.null:this.$parent.$parent.$parent.$parent.actualConfigData?this.$parent.$parent.$parent.$parent.actualConfigData.null:this.$parent.$parent.$parent.$parent.$parent.actualConfigData?this.$parent.$parent.$parent.$parent.$parent.actualConfigData.null:void 0},actualPluginConfig(){if(this.$parent.$parent.$parent.currentSalesChannelId){let e=this.$parent.$parent.$parent.currentSalesChannelId;return this.$parent.$parent.$parent.actualConfigData[e]}if(this.$parent.$parent.$parent.$parent.currentSalesChannelId){let e=this.$parent.$parent.$parent.$parent.currentSalesChannelId;return this.$parent.$parent.$parent.$parent.actualConfigData[e]}if(this.$parent.$parent.$parent.$parent.$parent.currentSalesChannelId){let e=this.$parent.$parent.$parent.$parent.$parent.currentSalesChannelId;return this.$parent.$parent.$parent.$parent.$parent.actualConfigData[e]}return null}},methods:{check(){this.isLoading=!0,this.multiSafepayApiService.verifyApiKey(this.globalPluginConfig,this.actualPluginConfig).then(e=>{if(!1===e.success)return this.createNotificationWarning({title:"MultiSafepay",message:this.$tc("multisafepay-verify-api-key.error")}),void(this.isLoading=!1);this.createNotificationSuccess({title:"MultiSafepay",message:this.$tc("multisafepay-verify-api-key.success")}),this.isLoading=!1})}}});n("xtVb");var d=n("hhDN"),m=n.n(d);const{Component:h}=Shopware;h.register("multisafepay-support",{template:m.a});var f=n("NeQ9"),y=n.n(f);const{Component:g}=Shopware;g.override("sw-settings-payment-detail",{template:y.a,data:()=>({tokenizationSupported:!1,componentSupported:!1}),inject:["multiSafepayApiService"],watch:{paymentMethod(){this.paymentMethod||(this.paymentMethod={}),this.paymentMethod.id||(this.paymentMethod.id=null),this.paymentMethod.customFields||(this.paymentMethod.customFields={}),this.paymentMethod.customFields.tokenization||(this.paymentMethod.customFields.tokenization=!1),this.paymentMethod.customFields.component||(this.paymentMethod.customFields.component=!1),this.reloadEntityData()}},mounted(){this.reloadEntityData()},methods:{reloadEntityData(){this.multiSafepayApiService.isTokenizationAllowed(this.$route.params.id).then(e=>{this.tokenizationSupported=e.supported}),this.multiSafepayApiService.isComponentAllowed(this.$route.params.id).then(e=>{this.componentSupported=e.supported})}}});var S=n("NpKD"),b=n.n(S);const $=Shopware.Classes.ApiService;class v extends ${constructor(e,t,n="multisafepay"){super(e,t,n)}refund(e,t){const n=this.getApiBasePath()+"/refund";return this.httpClient.post(n,{amount:100*e,orderId:t},{headers:this.getBasicHeaders()}).then(e=>$.handleResponse(e)).catch(e=>$.handleResponse(e))}getRefundData(e){const t=this.getApiBasePath()+"/get-refund-data";return this.httpClient.post(t,{orderId:e},{headers:this.getBasicHeaders()}).then(e=>$.handleResponse(e))}verifyApiKey(e,t){const n=this.getApiBasePath()+"/verify-api-key",a=this.getBasicHeaders();return this.httpClient.post(n,{globalPluginConfig:e,actualPluginConfig:t},{headers:a}).then(e=>$.handleResponse(e))}isTokenizationAllowed(e){const t=this.getApiBasePath()+"/tokenization-allowed";return this.httpClient.post(t,{paymentMethodId:e},{headers:this.getBasicHeaders()}).then(e=>$.handleResponse(e)).catch(e=>$.handleResponse(e))}isComponentAllowed(e){const t=this.getApiBasePath()+"/component-allowed";return this.httpClient.post(t,{paymentMethodId:e},{headers:this.getBasicHeaders()}).then(e=>$.handleResponse(e)).catch(e=>$.handleResponse(e))}}var w=n("vxeO"),k=n("r6r3"),_=Shopware,A=_.Component,C=_.Application;A.override("sw-order-detail-base",{template:b.a}),C.addServiceProvider("multiSafepayApiService",(function(e){var t=C.getContainer("init");return new v(t.httpClient,e.loginService)})),Shopware.Locale.extend("de-DE",w),Shopware.Locale.extend("en-GB",k)},I0jd:function(e,t,n){var a=n("MzbB");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("c3858184",a,!0,{})},MzbB:function(e,t,n){},NeQ9:function(e,t){e.exports='{% block sw_settings_payment_detail_content_field_after_order_enabled %}\n    {% parent %}\n    <sw-field\n            v-if="tokenizationSupported"\n            :is-loading="isLoading"\n            type="switch"\n            v-model="paymentMethod.customFields.tokenization"\n            label="Tokenization"\n            :help-text="$tc(\'multisafepay-tokenization.help_text\')"\n    ></sw-field>\n    <sw-field\n            v-if="componentSupported"\n            :is-loading="isLoading"\n            type="switch"\n            v-model="paymentMethod.customFields.component"\n            label="Component"\n            :help-text="$tc(\'multisafepay-component.help_text\')"\n    ></sw-field>\n{% endblock %}\n'},NpKD:function(e,t){e.exports='{% block sw_order_detail_base_line_items_card %}\n    {% parent %}\n\n    <multisafepay-refund :orderId="orderId"/>\n{% endblock %}\n'},aZvQ:function(e,t){e.exports='<div>\n    <sw-button-process\n        :isLoading="isLoading"\n        @click="check"\n    >{{ $tc(\'multisafepay-verify-api-key.apiButton\') }}</sw-button-process>\n</div>\n'},hhDN:function(e,t){e.exports='<template>\n    <div id="multisafepay-support">\n        <h2 class="multisafepay-title">{{ $tc("msp-support.documentation") }}</h2>\n        <p>{{ $tc("msp-support.read_docs") }}:</p>\n        <ul class="multisafepay-ul">\n            <li>\n                <a href="https://docs.multisafepay.com/shopware-6/" target="_blank" rel="noopener">\n                    {{ $tc(\'msp-support.manual\') }}\n                </a>\n            </li>\n            <li>\n                <a href="https://github.com/MultiSafepay/shopware6/blob/master/CHANGELOG.md"\n                   target="_blank" rel="noopener">\n                    {{ $tc("msp-support.changelog") }}\n                </a>\n            </li>\n            <li>\n                <a href="https://docs.multisafepay.com/integration/ready-made/shopware6/faq/" target="_blank" rel="noopener">\n                    {{ $tc("msp-support.faq") }}\n                </a>\n            </li>\n        </ul>\n        <p class="mt-1">{{ $tc("msp-support.for_developers") }}:</p>\n        <ul class="multisafepay-ul">\n            <li>\n                <a href="https://docs.multisafepay.com/api/" target="_blank" rel="noopener">\n                    {{ $tc("msp-support.api_documentation") }}\n                </a>\n            </li>\n            <li>\n                <a href="https://github.com/MultiSafepay/Shopware6" target="_blank" rel="noopener">\n                    MultiSafepay Github\n                </a>\n            </li>\n        </ul>\n        <h2 class="mt-2">{{ $tc("msp-support.account")}}</h2>\n        <p>\n            {{ $tc("msp-support.multisafepay_account_needed") }}\n            <br/>\n            <span v-html=\'$tc("msp-support.multisafepay_test_account")\'></span>\n        </p>\n        <p class="mt-2">\n            <span v-html=\'$tc("msp-support.multisafepay_live_account")\'></span>\n        </p>\n        <ul class="multisafepay-ul-none">\n            <li>\n                {{ $tc("msp-support.telephone") }}:\n                <a href="tel:+31208500501">\n                    +31 (0)20 - 8500501\n                </a>\n            </li>\n            <li>\n                {{ $tc("msp-support.e-mail") }}:\n                <a href="mailto:sales@multisafepay.com">\n                    sales@multisafepay.com\n                </a>\n            </li>\n        </ul>\n        <h2 class="mt-2">{{ $tc("msp-support.contact") }}</h2>\n        <p>\n            {{ $tc("msp-support.multisafepay_assistance_integration_team") }}\n        </p>\n        <ul class="multisafepay-ul-none">\n            <li>\n                {{ $tc("msp-support.telephone") }}:\n                <a href="tel:+31208500500">\n                    +31 (0)20 - 8500500\n                </a>\n            </li>\n            <li>\n                {{ $tc("msp-support.e-mail") }}:\n                <a href="mailto:integration@multisafepay.com">\n                    integration@multisafepay.com\n                </a>\n            </li>\n        </ul>\n    </div>\n\n</template>\n'},poD7:function(e,t){e.exports='<template>\n    <sw-card title="Refund"\n             v-show="isRefundAllowed"\n             :isLoading="isLoading"\n             class="sw-order-detail-base__line-item-grid-card">\n        <sw-number-field type="number" label="Amount" v-model="amount"\n                         placeholder="0.00" numberType="float" step="0.01"\n                         :max="maxRefundableAmount" :disabled="isRefundDisabled"/>\n        <sw-button variant="primary" @click="showRefundModal()" :disabled="isRefundDisabled">Refund</sw-button>\n        <span class="float-right">\n            <strong>Amount refunded: {{ order ? order.currency.symbol : \'currency\' }}&nbsp;{{ refundedAmount }}</strong>\n        </span>\n        <sw-modal v-show="showModal" title="MultiSafepay refund" variant="small" @modal-close="closeModal()">\n            Are you sure you want to refund {{ order ? order.currency.symbol : \'currency\' }}{{ this.amount }}?\n            <template slot="modal-footer">\n\n                <sw-button @click="closeModal()" size="small">\n                    {{ $tc(\'global.default.cancel\') }}\n                </sw-button>\n\n                <sw-button @click="applyRefund()"\n                           size="small"\n                           variant="primary">\n                    {{ $tc(\'global.default.apply\') }}\n                </sw-button>\n\n            </template>\n        </sw-modal>\n    </sw-card>\n</template>\n'},r6r3:function(e){e.exports=JSON.parse('{"multisafepay-verify-api-key":{"success":"Connection was successfully established","error":"Connection could not be established. Please check your API credentials","apiButton":"Validate API credentials"},"msp-support":{"documentation":"Documentation","api_documentation":"API Documentation","read_docs":"Read our documentation for more information about MultiSafepay and how to get started","manual":"Manual","changelog":"Changelog","faq":"FAQ","for_developers":"For developers","account":"Account","e-mail":"E-mail","telephone":"Telephone","contact":"Contact","multisafepay_account_needed":"To use this plugin you need a MultiSafepay account.","multisafepay_test_account":"If you would like to have a clear overview of what MultiSafepay has to offer, feel free to create a <a href=\\"https://testmerchant.multisafepay.com/signup\\" target=\\"_blank\\" rel=\\"noopener\\">test account</a>.","multisafepay_assistance_integration_team":"Need assistance? Feel free to contact our integration team:","multisafepay_live_account":"If you would like to set up a live account, feel free to create a <a href=\\"https://merchant.multisafepay.com/signup\\" target=\\"_blank\\" rel=\\"noopener\\">live account</a> or contact the MultiSafepay Sales department:"},"multisafepay-tokenization":{"help_text":"Check out our <a href=\\"https://docs.multisafepay.com/features/recurring-payments/\\" target=\\"_blank\\" style=\\"color:#fff\\">documentation center</a> to found more about tokenization."},"multisafepay-component":{"help_text":"Check out our <a href=\\"https://docs.multisafepay.com/payment-components/\\" target=\\"_blank\\" style=\\"color:#fff\\">documentation center</a> to found more about Payment Component."}}')},uH5x:function(e,t,n){},vxeO:function(e){e.exports=JSON.parse('{"multisafepay-verify-api-key":{"success":"Die Verbindung wurde erfolgreich hergestellt","error":"Verbindung konnte nicht hergestellt werden. Bitte überprüfen Sie Ihre API-Anmeldeinformationen","apiButton":"API Verbindung testen"},"msp-support":{"documentation":"Dokumentation","api_documentation":"API Dokumentation","read_docs":"Lesen Sie in unserem Dokumentationen mehr über MultiSafepay und wie Sie mit uns starten können","manual":"Anleitung","changelog":"Änderungsprotokoll","faq":"FAQ","for_developers":"Für Entwickler","account":"Account","e-mail":"E-Mail","telephone":"Telefon","contact":"Kontakt","multisafepay_account_needed":"Um dieses Plugin nutzen zu können benötigen Sie einen MultiSafepay-Account.","multisafepay_test_account":"Wenn Sie einen genauen Überblick über die Services von MultiSafepay bekommen möchten, können Sie einfach einen <a href=\\"https://testmerchant.multisafepay.com/signup\\" target=\\"_blank\\" rel=\\"noopener\\">Test-Account</a> eröffnen.","multisafepay_assistance_integration_team":"Sie brauchen Hilfe? Kontaktieren Sie unser Integrations-Team:","multisafepay_live_account":"Wenn Sie einen Account eröffnen wollen, können Sie einfach einen <a href=\\"https://merchant.multisafepay.com/signup\\" target=\\"_blank\\" rel=\\"noopener\\">Live-Account</a> eröffnen oder kontaktieren Sie das MultiSafepay Sales-Department:"},"multisafepay-tokenization":{"help_text":"Weitere Informationen zur Tokenisierung finden Sie in unserem <a href=\\"https://docs.multisafepay.com/features/recurring-payments/\\" target=\\"_blank\\" style=\\"color:#fff\\">Dokumentationscenter.</a>"},"multisafepay-component":{"help_text":"Sehen Sie sich unser <a href=\\"https://docs.multisafepay.com/payment-components/\\" target=\\"_blank\\" style=\\"color:#fff\\">Dokumentationscenter.</a> an, um mehr über die Zahlungskomponente zu erfahren."}}')},xtVb:function(e,t,n){var a=n("uH5x");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("33eab1e5",a,!0,{})}},[["ADUy","runtime","vendors-node"]]]);