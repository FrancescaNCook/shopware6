version: 2
jobs:
  codesniffer:
    docker:
      - image: shopware/development:7.2
    working_directory: /var/www/html
    steps:
      - run:
          name: Clear html folder
          command: |
            rm -rf index.html
      - checkout
      - restore_cache:
          key: -v1-{{ checksum "/var/www/html/composer.json"}}
      - run:
          name: Composer install
          command: |
            composer install --prefer-dist
      - save_cache:
          key: -v1-{{ checksum "/var/www/html/composer.json"}}
          paths:
            - /var/www/html/vendor
      - run:
          name: Run Code Sniffer
          command: |
            vendor/bin/phpcs --ignore=*/vendor/*,*/tests/Bootstrap.php -v --standard=phpcs.ruleset.xml /var/www/html
  mess_detector:
    docker:
      - image: shopware/development:7.2
    working_directory: /var/www/html
    steps:
      - run:
          name: Clear html folder
          command: |
            rm -rf index.html
      - checkout
      - restore_cache:
          key: -v1-{{ checksum "/var/www/html/composer.json"}}
      - run:
          name: Composer install
          command: |
            composer install --prefer-dist
      - save_cache:
          key: -v1-{{ checksum "/var/www/html/composer.json"}}
          paths:
            - /var/www/html/vendor
      - run:
          name: Run Mess Detector on source folder
          command: |
            vendor/bin/phpmd /var/www/html/src text codesize,unusedcode,cleancode --exclude src/API
  phpunit:
    docker:
      - image: shopware/development
    working_directory: /var/www/html
    steps:
      - run:
          name: Clear html folder
          command: |
            rm -rf index.html
      - checkout
      - restore_cache:
          key: -v1-{{ checksum "/var/www/html/composer.json"}}
      - run:
          name: Composer install
          command: |
            composer install --prefer-dist
      - save_cache:
          key: -v1-{{ checksum "/var/www/html/composer.json"}}
          paths:
            - /var/www/html/vendor
      - run:
          name: Run Phpunit With test suite unit test
          command: |
            vendor/bin/phpunit --testsuite="MultiSafepay Unit tests" --bootstrap="vendor/autoload.php"
  integration_tests:
    docker:
      - image: shopware/development
      - image: circleci/mysql:5.7
        environment:
          MYSQL_PASSWORD: app
          MYSQL_USER: app
          MYSQL_DATABASE: shopware
          MYSQL_ROOT_PASSWORD: shopware
    working_directory: /var/www/html
    steps:
      - run:
          name: Clear html folder
          command: |
            rm -rf index.html
      - run:
          name: Download shopware
          command: |
            git clone https://github.com/shopware/development.git .
      - run:
          name: Install shopware
          command: |
            ./psh.phar init --DB_HOST="127.0.0.1" --DB_USER="root" --DB_PASSWORD="shopware"
      - checkout:
          path: /var/www/html/custom/plugins/MultiSafepay
      - run:
          name: Install MultiSafepay plugin
          command: |
            php bin/console plugin:refresh
            php bin/console plugin:install --activate MultiSafepay
            php bin/console cache:clear
      - run:
          name: Import production database to test database
          command: |
            ./psh.phar init-test-databases --DB_HOST="127.0.0.1" --DB_USER="root" --DB_PASSWORD="shopware"
      - run:
          name: Run integration tests
          command: |
            cd /var/www/html/custom/plugins/MultiSafepay
            composer dump-autoload
            ../../../vendor/bin/phpunit --testsuite="MultiSafepay Integration tests"
workflows:
  version: 2
  default_check:
    jobs:
      - codesniffer
      - mess_detector
      - phpunit
      - integration_tests:
          requires:
            - codesniffer
            - mess_detector
            - phpunit
