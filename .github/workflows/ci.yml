name: Build
on:
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 02:00
  push:
jobs:
  integration_tests:
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: shopware
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.2', '7.3']
        shopware_version: ['v6.2.3', 'v6.3.0.0']
    name: Integration test - Php version ${{ matrix.php-version }} with Shopware ${{ matrix.shopware_version }}
    steps:
      - name: Install php
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          extensions: intl
      - name: Checkout Shopware 6 code
        uses: actions/checkout@v2
        with:
          repository: shopware/development
          ref: ${{ matrix.shopware_version }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: custom/plugins/MltisafeMultiSafepay
      - name: Install Shopware
        run: ./psh.phar init --DB_HOST="127.0.0.1" --DB_USER="root" --DB_PASSWORD="password" --DB_PORT=${{ job.services.mysql.ports['3306'] }}
      - name: Install Multisafepay Plugin
        run: php bin/console plugin:install -c --activate MltisafeMultiSafepay
      - name: prepare unit test database
        run: ./psh.phar init-test-databases --DB_HOST="127.0.0.1" --DB_USER="root" --DB_PASSWORD="password" --DB_PORT=${{ job.services.mysql.ports['3306'] }}
      - name: Run PHPUnit
        working-directory: ./custom/plugins/MltisafeMultiSafepay
        run: |
          composer dump-autoload
          ../../../vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Send clover to codecov
        working-directory: ./custom/plugins/MltisafeMultiSafepay
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }} -R .
  phpcs:
    runs-on: ubuntu-latest
    name: Code sniffer
    steps:
      - name: Install php dependencies
        uses: shivammathur/setup-php@master
        with:
          php-version: '7.3'
          extensions: intl
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: composer install
      - name: Run Code sniffer
        run: vendor/bin/phpcs --standard=phpcs.ruleset.xml .
